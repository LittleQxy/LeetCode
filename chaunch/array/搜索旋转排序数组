/*
 * @lc app=leetcode.cn id=33 lang=java
 *
 * [33] 搜索旋转排序数组
 */
//二分后考虑有序的部分
// @lc code=start
class Solution {
    public int search(int[] nums, int target) {
        int i =0;
        int j =nums.length-1;
        int mid;
        while(i<=j)
        {
            mid = (i+j)/2;
            if(nums[mid]==target)
                return mid;
            if(nums[i]<=nums[mid])
            {
                if(nums[i]<=target&&target<nums[mid])
                {
                    j=mid-1;
                }
                else{
                    i=mid+1;
                }
            }
            else{
                if(nums[j]>=target&&nums[mid]<target)
                {
                    i=mid+1;
                }
                else{
                    j=mid-1;
                }
            }

        }
        return -1;
    }
}
// @lc code=end

