class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        int x = lists.length;
        if(x<=0){
            return null;
        }
        while (x > 1){
            for (int i = 0;i<x/2;i++){
                lists[i] = mergeLinked(lists[i],lists[x/2+i]);
            }
            if (x%2!=0){
                lists[0] = mergeLinked(lists[0],lists[x-1]);
            }
            x /= 2;
        }

        return lists[0];
    }

    public ListNode mergeLinked(ListNode first,ListNode second){

        ListNode listNode = new ListNode(0);
        ListNode listNode1 = listNode;
        while (first!=null&&second!=null){
            if (first.val<=second.val){
                listNode.next = new ListNode(first.val);
                first = first.next;
            }else {
                listNode.next = new ListNode(second.val);
                second = second.next;
            }
            listNode = listNode.next;
        }
        listNode.next = first==null?second:first;
        return listNode1.next;
    }
}
